// From GradleGroovyTest10ArtifactOnly.kt
implementation files('libs/custom.jar')
implementation fileTree('libs') {
    include '*.jar'
}
implementation fileTree('libs') {
    include '*.jar'
    exclude 'test-*.jar'
}
implementation('org.example:lib:1.0') {
    artifact {
        name = 'lib'
        type = 'zip'
        extension = 'zip'
        classifier = 'dist'
    }
}
implementation('org.example:lib:1.0') {
    artifact {
        name = 'lib'
        type = 'jar'
        classifier = 'sources'
    }
    artifact {
        name = 'lib'
        type = 'jar'
        classifier = 'javadoc'
    }
}
implementation files('build/libs')
implementation files('https://example.com/lib.jar')
implementation('org.example:lib:1.0') {
    artifact {
        name = 'lib'
        type = 'jar'
        classifier = 'sources'
    }
    exclude group: 'commons-logging'
}
implementation('org.example:lib:1.0') {
    artifact {
        name = 'lib'
        type = 'zip'
        extension = 'zip'
        classifier = 'dist'
        url = 'https://example.com/lib-dist.zip'
    }
    capabilities {
        requireCapability('org.example:feature')
    }
    attributes {
        attribute(Usage.USAGE_ATTRIBUTE, 'java-runtime')
    }
}
// From GradleGroovyTest1BasicCoordinates.kt
implementation 'org.springframework:spring-core:5.3.9'
implementation group: 'org.springframework', name: 'spring-core', version: '5.3.9'
api 'com.google.guava:guava:31.1-jre'
compileOnly 'org.projectlombok:lombok:1.18.22'
implementation 'org.springframework:spring-core'
implementation 'com.mycompany.project:module-name:1.0.0'
implementation 'org.springframework.boot:spring-boot-starter:2.6.3'
implementation 'io.quarkus:quarkus-core:2.7.5.Final'
// From GradleGroovyTest2VersionSpecification.kt
implementation 'org.springframework:spring-core:latest.release'
implementation 'org.springframework:spring-core:5.+'
implementation 'org.springframework:spring-core:5.3.+'
implementation('org.springframework:spring-core') {
    version {
        strictly '[1.0,2.0]'
    }
}
implementation('org.springframework:spring-core') {
    version {
        strictly '(1.0,2.0)'
    }
}
implementation('org.springframework:spring-core') {
    version {
        strictly '[1.0,2.0)'
    }
}
implementation('org.springframework:spring-core') {
    version {
        prefer '1.5'
    }
}
implementation('org.springframework:spring-core') {
    version {
        reject '1.4.1'
    }
}
implementation('org.springframework:spring-core') {
    version {
        require '1.5'
    }
}
implementation('org.springframework:spring-core') {
    version {
        strictly '1.5'
    }
}
implementation('org.springframework:spring-core') {
    version {
        require '[1.0,2.0]'
        prefer '1.5'
        reject '1.4.1'
    }
}
implementation 'org.springframework:spring-core:1.0.0-SNAPSHOT'
implementation 'org.springframework:spring-core:1.0.0-rc.1'
implementation 'org.springframework:spring-core:1.0.0-beta.2'
implementation 'org.springframework:spring-core:1.0.0-alpha.3'
implementation 'org.springframework:spring-core:1.0.0-M1'
// From GradleGroovyTest3Configurations.kt
implementation 'org.springframework:spring-core:5.3.9'
api 'org.springframework:spring-core:5.3.9'
compileOnly 'org.springframework:spring-core:5.3.9'
runtimeOnly 'org.springframework:spring-core:5.3.9'
testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
testCompileOnly 'org.projectlombok:lombok:1.18.22'
testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
annotationProcessor 'org.projectlombok:lombok:1.18.22'
kapt 'org.mapstruct:mapstruct-processor:1.4.2.Final'
debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.8.1'
releaseImplementation 'com.example:release-only-lib:1.0.0'
myCustomConfiguration 'org.example:custom-lib:1.0.0'
implementation 'org.springframework:spring-core:5.3.9'
runtimeOnly 'org.springframework:spring-aspects:5.3.9'
testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
// From GradleGroovyTest4Attributes.kt
implementation('org.springframework:spring-core:5.3.9') {
    attributes {
        attribute(TargetJvmVersion.TARGET_JVM_VERSION_ATTRIBUTE, 11)
    }
}
implementation('org.springframework:spring-core:5.3.9') {
    attributes {
        attribute(TargetJvmVersion.TARGET_JVM_VERSION_ATTRIBUTE, 11)
        attribute(Usage.USAGE_ATTRIBUTE, 'java-runtime')
        attribute(Category.CATEGORY_ATTRIBUTE, 'library')
    }
}
implementation('org.springframework:spring-core:5.3.9') {
    attributes {
        attribute(Attribute.of('my.custom.attribute', String), 'custom-value')
    }
}
implementation('org.springframework:spring-core:5.3.9') {
    attributes {
        attribute(LibraryElements.LIBRARY_ELEMENTS_ATTRIBUTE, 'jar')
    }
}
implementation('org.springframework:spring-core:5.3.9') {
    attributes {
        attribute(Bundling.BUNDLING_ATTRIBUTE, 'external')
    }
}
implementation('org.springframework:spring-core:5.3.9') {
    attributes {
        attribute(DocsType.DOCS_TYPE_ATTRIBUTE, 'javadoc')
    }
}
implementation('org.springframework:spring-core:5.3.9') {
    attributes {
        attribute(Status.STATUS_ATTRIBUTE, 'release')
    }
}
implementation('org.springframework:spring-core:5.3.9') {
    attributes {
        attribute(ArtifactTypeDefinition.ARTIFACT_TYPE_ATTRIBUTE, 'jar')
        attribute(Usage.USAGE_ATTRIBUTE, 'java-runtime')
    }
}
implementation('org.springframework:spring-core:5.3.9:sources') {
    attributes {
        attribute(Category.CATEGORY_ATTRIBUTE, 'documentation')
        attribute(DocsType.DOCS_TYPE_ATTRIBUTE, 'source')
    }
}
implementation('org.springframework:spring-core:5.3.9') {
    attributes {
        attribute(TargetJvmVersion.TARGET_JVM_VERSION_ATTRIBUTE, 11)
        attribute(Usage.USAGE_ATTRIBUTE, 'java-runtime')
        attribute(Category.CATEGORY_ATTRIBUTE, 'library')
        attribute(LibraryElements.LIBRARY_ELEMENTS_ATTRIBUTE, 'jar')
        attribute(Bundling.BUNDLING_ATTRIBUTE, 'external')
        attribute(Status.STATUS_ATTRIBUTE, 'release')
    }
}
// From GradleGroovyTest5TransitiveDependencies.kt
implementation('org.springframework:spring-core:5.3.9') {
    exclude group: 'commons-logging', module: 'commons-logging'
}
implementation('org.springframework:spring-core:5.3.9') {
    exclude group: 'commons-logging', module: 'commons-logging'
    exclude group: 'log4j', module: 'log4j'
}
implementation('org.springframework:spring-core:5.3.9') {
    exclude group: 'commons-logging'
}
implementation('org.springframework:spring-core:5.3.9') {
    exclude module: 'commons-logging'
}
implementation('org.springframework:spring-core:5.3.9') {
    transitive = false
}
implementation('org.springframework:spring-core:5.3.9') {
    capabilities {
        requireCapability('org.springframework:spring-core-capability')
    }
}
implementation('org.springframework:spring-core:5.3.9') {
    substitute module('org.old:module') with module('org.new:module:1.0')
}
implementation('org.springframework:spring-core:5.3.9') {
    force = true
}
implementation('org.springframework:spring-core:5.3.9') {
    exclude group: '*', module: '*'
}
implementation('org.springframework:spring-core:5.3.9') {
    exclude group: 'commons-logging', module: 'commons-logging'
    exclude group: 'log4j'
    capabilities {
        requireCapability('org.springframework:spring-core-capability')
    }
    force = true
}
configurations {
    implementation {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
}

implementation 'org.springframework:spring-core:5.3.9'
dependencies {
    constraints {
        implementation('org.springframework:spring-core:5.3.9') {
            because 'tested with this version'
        }
    }
}
// From GradleGroovyTest6Platform.kt
implementation platform('org.springframework.boot:spring-boot-dependencies:2.7.0')
implementation enforcedPlatform('org.springframework.boot:spring-boot-dependencies:2.7.0')
implementation platform('org.springframework.boot:spring-boot-dependencies:2.7.0') {
    version {
        strictly '[2.7.0,3.0.0)'
    }
}
implementation platform('org.springframework.boot:spring-boot-dependencies:2.7.0')
implementation platform('org.testcontainers:testcontainers-bom:1.16.3')
implementation platform('org.springframework.boot:spring-boot-dependencies:2.7.0') {
    exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
}
implementation platform('org.springframework.boot:spring-boot-dependencies:2.7.0') {
    capabilities {
        requireCapability('org.springframework.boot:spring-boot-platform')
    }
}
implementation platform(project(':platform'))
dependencies {
    constraints {
        implementation(platform('org.springframework.boot:spring-boot-dependencies:2.7.0')) {
            because 'align platform versions'
        }
    }
}
implementation platform('org.springframework.boot:spring-boot-dependencies:2.7.0') {
    version {
        require '[2.7.0,3.0.0)'
        prefer '2.7.0'
        reject '2.7.1'
    }
}
implementation platform('org.springframework.boot:spring-boot-dependencies:2.7.0') {
    attributes {
        attribute(Category.CATEGORY_ATTRIBUTE, 'platform')
    }
}
// From GradleGroovyTest7Capabilities.kt
implementation('org.example:lib:1.0') {
    capabilities {
        requireCapability('org.example:special-feature')
    }
}
implementation('org.example:lib:1.0') {
    capabilities {
        requireCapability('org.example:feature1:1.0')
        requireCapability('org.example:feature2:1.0')
    }
}
implementation('org.example:lib:1.0') {
    capabilities {
        requireCapability('org.example:feature:2.0')
    }
}
implementation('org.example:lib:1.0') {
    capabilities {
        requireCapability('org.example:feature') {
            because 'needed for special functionality'
        }
    }
}
implementation('org.example:lib:1.0') {
    capabilities {
        requireCapability('org.example:feature') {
            attributes {
                attribute(Usage.USAGE_ATTRIBUTE, 'java-runtime')
            }
        }
    }
}
implementation('org.example:lib:1.0') {
    capabilities {
        requireCapability('org.example:feature') {
            version {
                require '[1.0,2.0)'
                prefer '1.5'
            }
        }
    }
}
implementation('org.example:lib:1.0') {
    capabilities {
        requireCapability('org.example:feature') {
            optional = true
        }
    }
}
implementation('org.example:lib:1.0') {
    capabilities {
        requireCapability('org.example:feature') {
            configuration = 'runtime'
        }
    }
}
implementation('org.example:lib:1.0') {
    capabilities {
        requireCapability('org.example:feature1:1.0') {
            because 'needed for feature 1'
            attributes {
                attribute(Usage.USAGE_ATTRIBUTE, 'java-runtime')
            }
        }
        requireCapability('org.example:feature2:2.0') {
            version {
                require '[2.0,3.0)'
            }
            optional = true
        }
    }
}
// From GradleGroovyTest8ProjectDependencies.kt
implementation project(':other-module')
implementation project(path: ':other-module', configuration: 'default')
implementation(project(':other-module')) {
    capabilities {
        requireCapability('org.example:feature')
    }
}
implementation(project(':other-module')) {
    attributes {
        attribute(Usage.USAGE_ATTRIBUTE, 'java-runtime')
    }
}
implementation(project(':other-module')) {
    exclude group: 'commons-logging', module: 'commons-logging'
}
implementation(project(':other-module')) {
    transitive = false
}
implementation project(path: ':other-module', buildType: 'release')
implementation(project(path: ':other-module', configuration: 'default')) {
    capabilities {
        requireCapability('org.example:feature')
    }
}
implementation(project(':other-module')) {
    capabilities {
        requireCapability('org.example:feature1')
        requireCapability('org.example:feature2')
    }
    attributes {
        attribute(Usage.USAGE_ATTRIBUTE, 'java-runtime')
        attribute(Category.CATEGORY_ATTRIBUTE, 'library')
    }
    exclude group: 'commons-logging'
    transitive = false
}
implementation project(':module1')
implementation project(':module2')
testImplementation project(path: ':test-utils', configuration: 'testArtifacts')
// From GradleGroovyTest9VersionCatalogs.kt
implementation libs.spring.core
implementation(libs.spring.core) {
    exclude group: 'commons-logging'
}
implementation libs.bundles.spring
implementation(libs.spring.core) {
    version {
        strictly '[1.0,2.0]'
    }
}
implementation(libs.spring.core) {
    capabilities {
        requireCapability('org.springframework:spring-core-capability')
    }
}
implementation(libs.spring.core) {
    attributes {
        attribute(Usage.USAGE_ATTRIBUTE, 'java-runtime')
    }
}
implementation libs.spring.core
implementation libs.spring.context
testImplementation libs.junit.jupiter
implementation(libs.spring.core) {
    version {
        require '[1.0,2.0]'
        prefer '1.5'
        reject '1.4.1'
    }
}
implementation(libs.spring.core) {
    version {
        strictly '[1.0,2.0]'
    }
    capabilities {
        requireCapability('org.springframework:spring-core-capability')
    }
    attributes {
        attribute(Usage.USAGE_ATTRIBUTE, 'java-runtime')
    }
    exclude group: 'commons-logging'
}
dependencyResolutionManagement {
    versionCatalogs {
        libs {
            version('spring') {
                strictly '[5.3.0,6.0.0)'
                prefer '5.3.9'
            }
            library('spring-core', 'org.springframework', 'spring-core').versionRef('spring')
            library('spring-context', 'org.springframework', 'spring-context').versionRef('spring')
            bundle('spring', ['spring-core', 'spring-context'])
        }
    }
}